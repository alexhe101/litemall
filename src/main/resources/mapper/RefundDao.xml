<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.litemall.dao.RefundDao">

    <resultMap id="BaseResultMap" type="com.example.litemall.model.po.Refund">
        <!--@Table refund-->
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="paymentId" column="payment_id" jdbcType="INTEGER"/>
        <result property="amout" column="amout" jdbcType="INTEGER"/>
        <result property="paySn" column="pay_sn" jdbcType="VARCHAR"/>
        <result property="billId" column="bill_id" jdbcType="INTEGER"/>
        <result property="state" column="state" jdbcType="OTHER"/>
        <result property="gmtCreate" column="gmt_create" jdbcType="TIMESTAMP"/>
        <result property="gmtModified" column="gmt_modified" jdbcType="TIMESTAMP"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="BaseResultMap">
        select
          id, payment_id, amout, pay_sn, bill_id, state, gmt_create, gmt_modified
        from order.refund
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="BaseResultMap">
        select
          id, payment_id, amout, pay_sn, bill_id, state, gmt_create, gmt_modified
        from order.refund
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="BaseResultMap">
        select
          id, payment_id, amout, pay_sn, bill_id, state, gmt_create, gmt_modified
        from order.refund
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="paymentId != null">
                and payment_id = #{paymentId}
            </if>
            <if test="amout != null">
                and amout = #{amout}
            </if>
            <if test="paySn != null and paySn != ''">
                and pay_sn = #{paySn}
            </if>
            <if test="billId != null">
                and bill_id = #{billId}
            </if>
            <if test="state != null">
                and state = #{state}
            </if>
            <if test="gmtCreate != null">
                and gmt_create = #{gmtCreate}
            </if>
            <if test="gmtModified != null">
                and gmt_modified = #{gmtModified}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into order.refund(payment_id, amout, pay_sn, bill_id, state, gmt_create, gmt_modified)
        values (#{paymentId}, #{amout}, #{paySn}, #{billId}, #{state}, #{gmtCreate}, #{gmtModified})
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update order.refund
        <set>
            <if test="paymentId != null">
                payment_id = #{paymentId},
            </if>
            <if test="amout != null">
                amout = #{amout},
            </if>
            <if test="paySn != null and paySn != ''">
                pay_sn = #{paySn},
            </if>
            <if test="billId != null">
                bill_id = #{billId},
            </if>
            <if test="state != null">
                state = #{state},
            </if>
            <if test="gmtCreate != null">
                gmt_create = #{gmtCreate},
            </if>
            <if test="gmtModified != null">
                gmt_modified = #{gmtModified},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from order.refund where id = #{id}
    </delete>

</mapper>