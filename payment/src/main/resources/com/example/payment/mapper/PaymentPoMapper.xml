<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.payment.mapper.PaymentPoMapper">
  <resultMap id="BaseResultMap" type="com.example.payment.model.po.PaymentPo">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="amount" jdbcType="BIGINT" property="amount" />
    <result column="actual_amount" jdbcType="BIGINT" property="actualAmount" />
    <result column="payment_pattern" jdbcType="VARCHAR" property="paymentPattern" />
    <result column="pay_time" jdbcType="TIMESTAMP" property="payTime" />
    <result column="pay_sn" jdbcType="VARCHAR" property="paySn" />
    <result column="begin_time" jdbcType="TIMESTAMP" property="beginTime" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
    <result column="order_id" jdbcType="BIGINT" property="orderId" />
    <result column="state" jdbcType="TINYINT" property="state" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
    <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified" />
    <result column="aftersale_id" jdbcType="BIGINT" property="aftersaleId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, amount, actual_amount, payment_pattern, pay_time, pay_sn, begin_time, end_time, 
    order_id, state, gmt_create, gmt_modified, aftersale_id
  </sql>
  <select id="selectByExample" parameterType="com.example.payment.model.po.PaymentPoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from payment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from payment
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from payment
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.payment.model.po.PaymentPoExample">
    delete from payment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.payment.model.po.PaymentPo">
    insert into payment (id, amount, actual_amount, 
      payment_pattern, pay_time, pay_sn, 
      begin_time, end_time, order_id, 
      state, gmt_create, gmt_modified, 
      aftersale_id)
    values (#{id,jdbcType=BIGINT}, #{amount,jdbcType=BIGINT}, #{actualAmount,jdbcType=BIGINT}, 
      #{paymentPattern,jdbcType=VARCHAR}, #{payTime,jdbcType=TIMESTAMP}, #{paySn,jdbcType=VARCHAR}, 
      #{beginTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP}, #{orderId,jdbcType=BIGINT}, 
      #{state,jdbcType=TINYINT}, #{gmtCreate,jdbcType=TIMESTAMP}, #{gmtModified,jdbcType=TIMESTAMP}, 
      #{aftersaleId,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.example.payment.model.po.PaymentPo">
    insert into payment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="actualAmount != null">
        actual_amount,
      </if>
      <if test="paymentPattern != null">
        payment_pattern,
      </if>
      <if test="payTime != null">
        pay_time,
      </if>
      <if test="paySn != null">
        pay_sn,
      </if>
      <if test="beginTime != null">
        begin_time,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="orderId != null">
        order_id,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="gmtCreate != null">
        gmt_create,
      </if>
      <if test="gmtModified != null">
        gmt_modified,
      </if>
      <if test="aftersaleId != null">
        aftersale_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=BIGINT},
      </if>
      <if test="actualAmount != null">
        #{actualAmount,jdbcType=BIGINT},
      </if>
      <if test="paymentPattern != null">
        #{paymentPattern,jdbcType=VARCHAR},
      </if>
      <if test="payTime != null">
        #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="paySn != null">
        #{paySn,jdbcType=VARCHAR},
      </if>
      <if test="beginTime != null">
        #{beginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=BIGINT},
      </if>
      <if test="state != null">
        #{state,jdbcType=TINYINT},
      </if>
      <if test="gmtCreate != null">
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="aftersaleId != null">
        #{aftersaleId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.payment.model.po.PaymentPoExample" resultType="java.lang.Integer">
    select count(*) from payment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update payment
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.amount != null">
        amount = #{record.amount,jdbcType=BIGINT},
      </if>
      <if test="record.actualAmount != null">
        actual_amount = #{record.actualAmount,jdbcType=BIGINT},
      </if>
      <if test="record.paymentPattern != null">
        payment_pattern = #{record.paymentPattern,jdbcType=VARCHAR},
      </if>
      <if test="record.payTime != null">
        pay_time = #{record.payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.paySn != null">
        pay_sn = #{record.paySn,jdbcType=VARCHAR},
      </if>
      <if test="record.beginTime != null">
        begin_time = #{record.beginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endTime != null">
        end_time = #{record.endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.orderId != null">
        order_id = #{record.orderId,jdbcType=BIGINT},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=TINYINT},
      </if>
      <if test="record.gmtCreate != null">
        gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.gmtModified != null">
        gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="record.aftersaleId != null">
        aftersale_id = #{record.aftersaleId,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update payment
    set id = #{record.id,jdbcType=BIGINT},
      amount = #{record.amount,jdbcType=BIGINT},
      actual_amount = #{record.actualAmount,jdbcType=BIGINT},
      payment_pattern = #{record.paymentPattern,jdbcType=VARCHAR},
      pay_time = #{record.payTime,jdbcType=TIMESTAMP},
      pay_sn = #{record.paySn,jdbcType=VARCHAR},
      begin_time = #{record.beginTime,jdbcType=TIMESTAMP},
      end_time = #{record.endTime,jdbcType=TIMESTAMP},
      order_id = #{record.orderId,jdbcType=BIGINT},
      state = #{record.state,jdbcType=TINYINT},
      gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
      aftersale_id = #{record.aftersaleId,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.payment.model.po.PaymentPo">
    update payment
    <set>
      <if test="amount != null">
        amount = #{amount,jdbcType=BIGINT},
      </if>
      <if test="actualAmount != null">
        actual_amount = #{actualAmount,jdbcType=BIGINT},
      </if>
      <if test="paymentPattern != null">
        payment_pattern = #{paymentPattern,jdbcType=VARCHAR},
      </if>
      <if test="payTime != null">
        pay_time = #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="paySn != null">
        pay_sn = #{paySn,jdbcType=VARCHAR},
      </if>
      <if test="beginTime != null">
        begin_time = #{beginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderId != null">
        order_id = #{orderId,jdbcType=BIGINT},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=TINYINT},
      </if>
      <if test="gmtCreate != null">
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="aftersaleId != null">
        aftersale_id = #{aftersaleId,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.payment.model.po.PaymentPo">
    update payment
    set amount = #{amount,jdbcType=BIGINT},
      actual_amount = #{actualAmount,jdbcType=BIGINT},
      payment_pattern = #{paymentPattern,jdbcType=VARCHAR},
      pay_time = #{payTime,jdbcType=TIMESTAMP},
      pay_sn = #{paySn,jdbcType=VARCHAR},
      begin_time = #{beginTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      order_id = #{orderId,jdbcType=BIGINT},
      state = #{state,jdbcType=TINYINT},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      aftersale_id = #{aftersaleId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="com.example.payment.model.po.PaymentPo">
    <id column="payment_id" jdbcType="SMALLINT" property="payment_id" />
    <result column="customer_id" jdbcType="SMALLINT" property="customer_id" />
    <result column="staff_id" jdbcType="TINYINT" property="staff_id" />
    <result column="rental_id" jdbcType="INTEGER" property="rental_id" />
    <result column="amount" jdbcType="DECIMAL" property="amount" />
    <result column="payment_date" jdbcType="TIMESTAMP" property="payment_date" />
    <result column="last_update" jdbcType="TIMESTAMP" property="last_update" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    payment_id, customer_id, staff_id, rental_id, amount, payment_date, last_update
  </sql>
  <select id="selectByExample" parameterType="com.example.payment.model.po.PaymentPoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from payment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Short" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from payment
    where payment_id = #{payment_id,jdbcType=SMALLINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Short">
    delete from payment
    where payment_id = #{payment_id,jdbcType=SMALLINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.payment.model.po.PaymentPoExample">
    delete from payment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.payment.model.po.PaymentPo">
    insert into payment (payment_id, customer_id, staff_id, 
      rental_id, amount, payment_date, 
      last_update)
    values (#{payment_id,jdbcType=SMALLINT}, #{customer_id,jdbcType=SMALLINT}, #{staff_id,jdbcType=TINYINT}, 
      #{rental_id,jdbcType=INTEGER}, #{amount,jdbcType=DECIMAL}, #{payment_date,jdbcType=TIMESTAMP}, 
      #{last_update,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.example.payment.model.po.PaymentPo">
    insert into payment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="payment_id != null">
        payment_id,
      </if>
      <if test="customer_id != null">
        customer_id,
      </if>
      <if test="staff_id != null">
        staff_id,
      </if>
      <if test="rental_id != null">
        rental_id,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="payment_date != null">
        payment_date,
      </if>
      <if test="last_update != null">
        last_update,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="payment_id != null">
        #{payment_id,jdbcType=SMALLINT},
      </if>
      <if test="customer_id != null">
        #{customer_id,jdbcType=SMALLINT},
      </if>
      <if test="staff_id != null">
        #{staff_id,jdbcType=TINYINT},
      </if>
      <if test="rental_id != null">
        #{rental_id,jdbcType=INTEGER},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="payment_date != null">
        #{payment_date,jdbcType=TIMESTAMP},
      </if>
      <if test="last_update != null">
        #{last_update,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.payment.model.po.PaymentPoExample" resultType="java.lang.Integer">
    select count(*) from payment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update payment
    <set>
      <if test="record.payment_id != null">
        payment_id = #{record.payment_id,jdbcType=SMALLINT},
      </if>
      <if test="record.customer_id != null">
        customer_id = #{record.customer_id,jdbcType=SMALLINT},
      </if>
      <if test="record.staff_id != null">
        staff_id = #{record.staff_id,jdbcType=TINYINT},
      </if>
      <if test="record.rental_id != null">
        rental_id = #{record.rental_id,jdbcType=INTEGER},
      </if>
      <if test="record.amount != null">
        amount = #{record.amount,jdbcType=DECIMAL},
      </if>
      <if test="record.payment_date != null">
        payment_date = #{record.payment_date,jdbcType=TIMESTAMP},
      </if>
      <if test="record.last_update != null">
        last_update = #{record.last_update,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update payment
    set payment_id = #{record.payment_id,jdbcType=SMALLINT},
      customer_id = #{record.customer_id,jdbcType=SMALLINT},
      staff_id = #{record.staff_id,jdbcType=TINYINT},
      rental_id = #{record.rental_id,jdbcType=INTEGER},
      amount = #{record.amount,jdbcType=DECIMAL},
      payment_date = #{record.payment_date,jdbcType=TIMESTAMP},
      last_update = #{record.last_update,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.payment.model.po.PaymentPo">
    update payment
    <set>
      <if test="customer_id != null">
        customer_id = #{customer_id,jdbcType=SMALLINT},
      </if>
      <if test="staff_id != null">
        staff_id = #{staff_id,jdbcType=TINYINT},
      </if>
      <if test="rental_id != null">
        rental_id = #{rental_id,jdbcType=INTEGER},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="payment_date != null">
        payment_date = #{payment_date,jdbcType=TIMESTAMP},
      </if>
      <if test="last_update != null">
        last_update = #{last_update,jdbcType=TIMESTAMP},
      </if>
    </set>
    where payment_id = #{payment_id,jdbcType=SMALLINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.payment.model.po.PaymentPo">
    update payment
    set customer_id = #{customer_id,jdbcType=SMALLINT},
      staff_id = #{staff_id,jdbcType=TINYINT},
      rental_id = #{rental_id,jdbcType=INTEGER},
      amount = #{amount,jdbcType=DECIMAL},
      payment_date = #{payment_date,jdbcType=TIMESTAMP},
      last_update = #{last_update,jdbcType=TIMESTAMP}
    where payment_id = #{payment_id,jdbcType=SMALLINT}
  </update>
  <resultMap id="BaseResultMap" type="com.example.payment.model.po.PaymentPo">
    <result column="id" jdbcType="BIGINT" property="id" />
    <result column="amount" jdbcType="BIGINT" property="amount" />
    <result column="actual_amount" jdbcType="BIGINT" property="actual_amount" />
    <result column="payment_pattern" jdbcType="VARCHAR" property="payment_pattern" />
    <result column="pay_time" jdbcType="TIMESTAMP" property="pay_time" />
    <result column="pay_sn" jdbcType="VARCHAR" property="pay_sn" />
    <result column="begin_time" jdbcType="TIMESTAMP" property="begin_time" />
    <result column="end_time" jdbcType="TIMESTAMP" property="end_time" />
    <result column="order_id" jdbcType="BIGINT" property="order_id" />
    <result column="state" jdbcType="TINYINT" property="state" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmt_create" />
    <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmt_modified" />
    <result column="aftersale_id" jdbcType="BIGINT" property="aftersale_id" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, amount, actual_amount, payment_pattern, pay_time, pay_sn, begin_time, end_time, 
    order_id, state, gmt_create, gmt_modified, aftersale_id
  </sql>
  <select id="selectByExample" parameterType="com.example.payment.model.po.PaymentPoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from payment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.example.payment.model.po.PaymentPoExample">
    delete from payment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.payment.model.po.PaymentPo">
    insert into payment (id, amount, actual_amount, 
      payment_pattern, pay_time, pay_sn, 
      begin_time, end_time, order_id, 
      state, gmt_create, gmt_modified, 
      aftersale_id)
    values (#{id,jdbcType=BIGINT}, #{amount,jdbcType=BIGINT}, #{actual_amount,jdbcType=BIGINT}, 
      #{payment_pattern,jdbcType=VARCHAR}, #{pay_time,jdbcType=TIMESTAMP}, #{pay_sn,jdbcType=VARCHAR}, 
      #{begin_time,jdbcType=TIMESTAMP}, #{end_time,jdbcType=TIMESTAMP}, #{order_id,jdbcType=BIGINT}, 
      #{state,jdbcType=TINYINT}, #{gmt_create,jdbcType=TIMESTAMP}, #{gmt_modified,jdbcType=TIMESTAMP}, 
      #{aftersale_id,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.example.payment.model.po.PaymentPo">
    insert into payment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="actual_amount != null">
        actual_amount,
      </if>
      <if test="payment_pattern != null">
        payment_pattern,
      </if>
      <if test="pay_time != null">
        pay_time,
      </if>
      <if test="pay_sn != null">
        pay_sn,
      </if>
      <if test="begin_time != null">
        begin_time,
      </if>
      <if test="end_time != null">
        end_time,
      </if>
      <if test="order_id != null">
        order_id,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="gmt_create != null">
        gmt_create,
      </if>
      <if test="gmt_modified != null">
        gmt_modified,
      </if>
      <if test="aftersale_id != null">
        aftersale_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=BIGINT},
      </if>
      <if test="actual_amount != null">
        #{actual_amount,jdbcType=BIGINT},
      </if>
      <if test="payment_pattern != null">
        #{payment_pattern,jdbcType=VARCHAR},
      </if>
      <if test="pay_time != null">
        #{pay_time,jdbcType=TIMESTAMP},
      </if>
      <if test="pay_sn != null">
        #{pay_sn,jdbcType=VARCHAR},
      </if>
      <if test="begin_time != null">
        #{begin_time,jdbcType=TIMESTAMP},
      </if>
      <if test="end_time != null">
        #{end_time,jdbcType=TIMESTAMP},
      </if>
      <if test="order_id != null">
        #{order_id,jdbcType=BIGINT},
      </if>
      <if test="state != null">
        #{state,jdbcType=TINYINT},
      </if>
      <if test="gmt_create != null">
        #{gmt_create,jdbcType=TIMESTAMP},
      </if>
      <if test="gmt_modified != null">
        #{gmt_modified,jdbcType=TIMESTAMP},
      </if>
      <if test="aftersale_id != null">
        #{aftersale_id,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.payment.model.po.PaymentPoExample" resultType="java.lang.Integer">
    select count(*) from payment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update payment
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.amount != null">
        amount = #{record.amount,jdbcType=BIGINT},
      </if>
      <if test="record.actual_amount != null">
        actual_amount = #{record.actual_amount,jdbcType=BIGINT},
      </if>
      <if test="record.payment_pattern != null">
        payment_pattern = #{record.payment_pattern,jdbcType=VARCHAR},
      </if>
      <if test="record.pay_time != null">
        pay_time = #{record.pay_time,jdbcType=TIMESTAMP},
      </if>
      <if test="record.pay_sn != null">
        pay_sn = #{record.pay_sn,jdbcType=VARCHAR},
      </if>
      <if test="record.begin_time != null">
        begin_time = #{record.begin_time,jdbcType=TIMESTAMP},
      </if>
      <if test="record.end_time != null">
        end_time = #{record.end_time,jdbcType=TIMESTAMP},
      </if>
      <if test="record.order_id != null">
        order_id = #{record.order_id,jdbcType=BIGINT},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=TINYINT},
      </if>
      <if test="record.gmt_create != null">
        gmt_create = #{record.gmt_create,jdbcType=TIMESTAMP},
      </if>
      <if test="record.gmt_modified != null">
        gmt_modified = #{record.gmt_modified,jdbcType=TIMESTAMP},
      </if>
      <if test="record.aftersale_id != null">
        aftersale_id = #{record.aftersale_id,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update payment
    set id = #{record.id,jdbcType=BIGINT},
      amount = #{record.amount,jdbcType=BIGINT},
      actual_amount = #{record.actual_amount,jdbcType=BIGINT},
      payment_pattern = #{record.payment_pattern,jdbcType=VARCHAR},
      pay_time = #{record.pay_time,jdbcType=TIMESTAMP},
      pay_sn = #{record.pay_sn,jdbcType=VARCHAR},
      begin_time = #{record.begin_time,jdbcType=TIMESTAMP},
      end_time = #{record.end_time,jdbcType=TIMESTAMP},
      order_id = #{record.order_id,jdbcType=BIGINT},
      state = #{record.state,jdbcType=TINYINT},
      gmt_create = #{record.gmt_create,jdbcType=TIMESTAMP},
      gmt_modified = #{record.gmt_modified,jdbcType=TIMESTAMP},
      aftersale_id = #{record.aftersale_id,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <resultMap id="BaseResultMap" type="com.example.payment.model.po.PaymentPo">
    <id column="payment_id" jdbcType="SMALLINT" property="paymentId" />
    <result column="customer_id" jdbcType="SMALLINT" property="customerId" />
    <result column="staff_id" jdbcType="TINYINT" property="staffId" />
    <result column="rental_id" jdbcType="INTEGER" property="rentalId" />
    <result column="amount" jdbcType="DECIMAL" property="amount" />
    <result column="payment_date" jdbcType="TIMESTAMP" property="paymentDate" />
    <result column="last_update" jdbcType="TIMESTAMP" property="lastUpdate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    payment_id, customer_id, staff_id, rental_id, amount, payment_date, last_update
  </sql>
  <select id="selectByExample" parameterType="com.example.payment.model.po.PaymentPoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from payment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Short" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from payment
    where payment_id = #{paymentId,jdbcType=SMALLINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Short">
    delete from payment
    where payment_id = #{paymentId,jdbcType=SMALLINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.payment.model.po.PaymentPoExample">
    delete from payment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.payment.model.po.PaymentPo">
    insert into payment (payment_id, customer_id, staff_id, 
      rental_id, amount, payment_date, 
      last_update)
    values (#{paymentId,jdbcType=SMALLINT}, #{customerId,jdbcType=SMALLINT}, #{staffId,jdbcType=TINYINT}, 
      #{rentalId,jdbcType=INTEGER}, #{amount,jdbcType=DECIMAL}, #{paymentDate,jdbcType=TIMESTAMP}, 
      #{lastUpdate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.example.payment.model.po.PaymentPo">
    insert into payment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="paymentId != null">
        payment_id,
      </if>
      <if test="customerId != null">
        customer_id,
      </if>
      <if test="staffId != null">
        staff_id,
      </if>
      <if test="rentalId != null">
        rental_id,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="paymentDate != null">
        payment_date,
      </if>
      <if test="lastUpdate != null">
        last_update,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="paymentId != null">
        #{paymentId,jdbcType=SMALLINT},
      </if>
      <if test="customerId != null">
        #{customerId,jdbcType=SMALLINT},
      </if>
      <if test="staffId != null">
        #{staffId,jdbcType=TINYINT},
      </if>
      <if test="rentalId != null">
        #{rentalId,jdbcType=INTEGER},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="paymentDate != null">
        #{paymentDate,jdbcType=TIMESTAMP},
      </if>
      <if test="lastUpdate != null">
        #{lastUpdate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.payment.model.po.PaymentPoExample" resultType="java.lang.Integer">
    select count(*) from payment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update payment
    <set>
      <if test="record.paymentId != null">
        payment_id = #{record.paymentId,jdbcType=SMALLINT},
      </if>
      <if test="record.customerId != null">
        customer_id = #{record.customerId,jdbcType=SMALLINT},
      </if>
      <if test="record.staffId != null">
        staff_id = #{record.staffId,jdbcType=TINYINT},
      </if>
      <if test="record.rentalId != null">
        rental_id = #{record.rentalId,jdbcType=INTEGER},
      </if>
      <if test="record.amount != null">
        amount = #{record.amount,jdbcType=DECIMAL},
      </if>
      <if test="record.paymentDate != null">
        payment_date = #{record.paymentDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lastUpdate != null">
        last_update = #{record.lastUpdate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update payment
    set payment_id = #{record.paymentId,jdbcType=SMALLINT},
      customer_id = #{record.customerId,jdbcType=SMALLINT},
      staff_id = #{record.staffId,jdbcType=TINYINT},
      rental_id = #{record.rentalId,jdbcType=INTEGER},
      amount = #{record.amount,jdbcType=DECIMAL},
      payment_date = #{record.paymentDate,jdbcType=TIMESTAMP},
      last_update = #{record.lastUpdate,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.payment.model.po.PaymentPo">
    update payment
    <set>
      <if test="customerId != null">
        customer_id = #{customerId,jdbcType=SMALLINT},
      </if>
      <if test="staffId != null">
        staff_id = #{staffId,jdbcType=TINYINT},
      </if>
      <if test="rentalId != null">
        rental_id = #{rentalId,jdbcType=INTEGER},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="paymentDate != null">
        payment_date = #{paymentDate,jdbcType=TIMESTAMP},
      </if>
      <if test="lastUpdate != null">
        last_update = #{lastUpdate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where payment_id = #{paymentId,jdbcType=SMALLINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.payment.model.po.PaymentPo">
    update payment
    set customer_id = #{customerId,jdbcType=SMALLINT},
      staff_id = #{staffId,jdbcType=TINYINT},
      rental_id = #{rentalId,jdbcType=INTEGER},
      amount = #{amount,jdbcType=DECIMAL},
      payment_date = #{paymentDate,jdbcType=TIMESTAMP},
      last_update = #{lastUpdate,jdbcType=TIMESTAMP}
    where payment_id = #{paymentId,jdbcType=SMALLINT}
  </update>
  <resultMap id="BaseResultMap" type="com.example.payment.model.po.PaymentPo">
    <result column="id" jdbcType="BIGINT" property="id" />
    <result column="amount" jdbcType="BIGINT" property="amount" />
    <result column="actual_amount" jdbcType="BIGINT" property="actualAmount" />
    <result column="payment_pattern" jdbcType="VARCHAR" property="paymentPattern" />
    <result column="pay_time" jdbcType="TIMESTAMP" property="payTime" />
    <result column="pay_sn" jdbcType="VARCHAR" property="paySn" />
    <result column="begin_time" jdbcType="TIMESTAMP" property="beginTime" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
    <result column="order_id" jdbcType="BIGINT" property="orderId" />
    <result column="state" jdbcType="TINYINT" property="state" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
    <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified" />
    <result column="aftersale_id" jdbcType="BIGINT" property="aftersaleId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, amount, actual_amount, payment_pattern, pay_time, pay_sn, begin_time, end_time, 
    order_id, state, gmt_create, gmt_modified, aftersale_id
  </sql>
  <select id="selectByExample" parameterType="com.example.payment.model.po.PaymentPoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from payment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.example.payment.model.po.PaymentPoExample">
    delete from payment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.payment.model.po.PaymentPo">
    insert into payment (id, amount, actual_amount, 
      payment_pattern, pay_time, pay_sn, 
      begin_time, end_time, order_id, 
      state, gmt_create, gmt_modified, 
      aftersale_id)
    values (#{id,jdbcType=BIGINT}, #{amount,jdbcType=BIGINT}, #{actualAmount,jdbcType=BIGINT}, 
      #{paymentPattern,jdbcType=VARCHAR}, #{payTime,jdbcType=TIMESTAMP}, #{paySn,jdbcType=VARCHAR}, 
      #{beginTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP}, #{orderId,jdbcType=BIGINT}, 
      #{state,jdbcType=TINYINT}, #{gmtCreate,jdbcType=TIMESTAMP}, #{gmtModified,jdbcType=TIMESTAMP}, 
      #{aftersaleId,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.example.payment.model.po.PaymentPo">
    insert into payment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="actualAmount != null">
        actual_amount,
      </if>
      <if test="paymentPattern != null">
        payment_pattern,
      </if>
      <if test="payTime != null">
        pay_time,
      </if>
      <if test="paySn != null">
        pay_sn,
      </if>
      <if test="beginTime != null">
        begin_time,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="orderId != null">
        order_id,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="gmtCreate != null">
        gmt_create,
      </if>
      <if test="gmtModified != null">
        gmt_modified,
      </if>
      <if test="aftersaleId != null">
        aftersale_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=BIGINT},
      </if>
      <if test="actualAmount != null">
        #{actualAmount,jdbcType=BIGINT},
      </if>
      <if test="paymentPattern != null">
        #{paymentPattern,jdbcType=VARCHAR},
      </if>
      <if test="payTime != null">
        #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="paySn != null">
        #{paySn,jdbcType=VARCHAR},
      </if>
      <if test="beginTime != null">
        #{beginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=BIGINT},
      </if>
      <if test="state != null">
        #{state,jdbcType=TINYINT},
      </if>
      <if test="gmtCreate != null">
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="aftersaleId != null">
        #{aftersaleId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.payment.model.po.PaymentPoExample" resultType="java.lang.Integer">
    select count(*) from payment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update payment
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.amount != null">
        amount = #{record.amount,jdbcType=BIGINT},
      </if>
      <if test="record.actualAmount != null">
        actual_amount = #{record.actualAmount,jdbcType=BIGINT},
      </if>
      <if test="record.paymentPattern != null">
        payment_pattern = #{record.paymentPattern,jdbcType=VARCHAR},
      </if>
      <if test="record.payTime != null">
        pay_time = #{record.payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.paySn != null">
        pay_sn = #{record.paySn,jdbcType=VARCHAR},
      </if>
      <if test="record.beginTime != null">
        begin_time = #{record.beginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endTime != null">
        end_time = #{record.endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.orderId != null">
        order_id = #{record.orderId,jdbcType=BIGINT},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=TINYINT},
      </if>
      <if test="record.gmtCreate != null">
        gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.gmtModified != null">
        gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="record.aftersaleId != null">
        aftersale_id = #{record.aftersaleId,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update payment
    set id = #{record.id,jdbcType=BIGINT},
      amount = #{record.amount,jdbcType=BIGINT},
      actual_amount = #{record.actualAmount,jdbcType=BIGINT},
      payment_pattern = #{record.paymentPattern,jdbcType=VARCHAR},
      pay_time = #{record.payTime,jdbcType=TIMESTAMP},
      pay_sn = #{record.paySn,jdbcType=VARCHAR},
      begin_time = #{record.beginTime,jdbcType=TIMESTAMP},
      end_time = #{record.endTime,jdbcType=TIMESTAMP},
      order_id = #{record.orderId,jdbcType=BIGINT},
      state = #{record.state,jdbcType=TINYINT},
      gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
      aftersale_id = #{record.aftersaleId,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <resultMap id="BaseResultMap" type="com.example.payment.model.po.PaymentPo">
    <id column="payment_id" jdbcType="SMALLINT" property="paymentId" />
    <result column="customer_id" jdbcType="SMALLINT" property="customerId" />
    <result column="staff_id" jdbcType="TINYINT" property="staffId" />
    <result column="rental_id" jdbcType="INTEGER" property="rentalId" />
    <result column="amount" jdbcType="DECIMAL" property="amount" />
    <result column="payment_date" jdbcType="TIMESTAMP" property="paymentDate" />
    <result column="last_update" jdbcType="TIMESTAMP" property="lastUpdate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    payment_id, customer_id, staff_id, rental_id, amount, payment_date, last_update
  </sql>
  <select id="selectByExample" parameterType="com.example.payment.model.po.PaymentPoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from payment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Short" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from payment
    where payment_id = #{paymentId,jdbcType=SMALLINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Short">
    delete from payment
    where payment_id = #{paymentId,jdbcType=SMALLINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.payment.model.po.PaymentPoExample">
    delete from payment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.payment.model.po.PaymentPo">
    insert into payment (payment_id, customer_id, staff_id, 
      rental_id, amount, payment_date, 
      last_update)
    values (#{paymentId,jdbcType=SMALLINT}, #{customerId,jdbcType=SMALLINT}, #{staffId,jdbcType=TINYINT}, 
      #{rentalId,jdbcType=INTEGER}, #{amount,jdbcType=DECIMAL}, #{paymentDate,jdbcType=TIMESTAMP}, 
      #{lastUpdate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.example.payment.model.po.PaymentPo">
    insert into payment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="paymentId != null">
        payment_id,
      </if>
      <if test="customerId != null">
        customer_id,
      </if>
      <if test="staffId != null">
        staff_id,
      </if>
      <if test="rentalId != null">
        rental_id,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="paymentDate != null">
        payment_date,
      </if>
      <if test="lastUpdate != null">
        last_update,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="paymentId != null">
        #{paymentId,jdbcType=SMALLINT},
      </if>
      <if test="customerId != null">
        #{customerId,jdbcType=SMALLINT},
      </if>
      <if test="staffId != null">
        #{staffId,jdbcType=TINYINT},
      </if>
      <if test="rentalId != null">
        #{rentalId,jdbcType=INTEGER},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="paymentDate != null">
        #{paymentDate,jdbcType=TIMESTAMP},
      </if>
      <if test="lastUpdate != null">
        #{lastUpdate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.payment.model.po.PaymentPoExample" resultType="java.lang.Integer">
    select count(*) from payment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update payment
    <set>
      <if test="record.paymentId != null">
        payment_id = #{record.paymentId,jdbcType=SMALLINT},
      </if>
      <if test="record.customerId != null">
        customer_id = #{record.customerId,jdbcType=SMALLINT},
      </if>
      <if test="record.staffId != null">
        staff_id = #{record.staffId,jdbcType=TINYINT},
      </if>
      <if test="record.rentalId != null">
        rental_id = #{record.rentalId,jdbcType=INTEGER},
      </if>
      <if test="record.amount != null">
        amount = #{record.amount,jdbcType=DECIMAL},
      </if>
      <if test="record.paymentDate != null">
        payment_date = #{record.paymentDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lastUpdate != null">
        last_update = #{record.lastUpdate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update payment
    set payment_id = #{record.paymentId,jdbcType=SMALLINT},
      customer_id = #{record.customerId,jdbcType=SMALLINT},
      staff_id = #{record.staffId,jdbcType=TINYINT},
      rental_id = #{record.rentalId,jdbcType=INTEGER},
      amount = #{record.amount,jdbcType=DECIMAL},
      payment_date = #{record.paymentDate,jdbcType=TIMESTAMP},
      last_update = #{record.lastUpdate,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.payment.model.po.PaymentPo">
    update payment
    <set>
      <if test="customerId != null">
        customer_id = #{customerId,jdbcType=SMALLINT},
      </if>
      <if test="staffId != null">
        staff_id = #{staffId,jdbcType=TINYINT},
      </if>
      <if test="rentalId != null">
        rental_id = #{rentalId,jdbcType=INTEGER},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="paymentDate != null">
        payment_date = #{paymentDate,jdbcType=TIMESTAMP},
      </if>
      <if test="lastUpdate != null">
        last_update = #{lastUpdate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where payment_id = #{paymentId,jdbcType=SMALLINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.payment.model.po.PaymentPo">
    update payment
    set customer_id = #{customerId,jdbcType=SMALLINT},
      staff_id = #{staffId,jdbcType=TINYINT},
      rental_id = #{rentalId,jdbcType=INTEGER},
      amount = #{amount,jdbcType=DECIMAL},
      payment_date = #{paymentDate,jdbcType=TIMESTAMP},
      last_update = #{lastUpdate,jdbcType=TIMESTAMP}
    where payment_id = #{paymentId,jdbcType=SMALLINT}
  </update>
  <resultMap id="BaseResultMap" type="com.example.payment.model.po.PaymentPo">
    <result column="id" jdbcType="BIGINT" property="id" />
    <result column="amount" jdbcType="BIGINT" property="amount" />
    <result column="actual_amount" jdbcType="BIGINT" property="actualAmount" />
    <result column="payment_pattern" jdbcType="VARCHAR" property="paymentPattern" />
    <result column="pay_time" jdbcType="TIMESTAMP" property="payTime" />
    <result column="pay_sn" jdbcType="VARCHAR" property="paySn" />
    <result column="begin_time" jdbcType="TIMESTAMP" property="beginTime" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
    <result column="order_id" jdbcType="BIGINT" property="orderId" />
    <result column="state" jdbcType="TINYINT" property="state" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
    <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified" />
    <result column="aftersale_id" jdbcType="BIGINT" property="aftersaleId" />
    <result column="if_deposit" jdbcType="TINYINT" property="ifDeposit" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, amount, actual_amount, payment_pattern, pay_time, pay_sn, begin_time, end_time, 
    order_id, state, gmt_create, gmt_modified, aftersale_id, if_deposit
  </sql>
  <select id="selectByExample" parameterType="com.example.payment.model.po.PaymentPoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from payment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.example.payment.model.po.PaymentPoExample">
    delete from payment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.payment.model.po.PaymentPo">
    insert into payment (id, amount, actual_amount, 
      payment_pattern, pay_time, pay_sn, 
      begin_time, end_time, order_id, 
      state, gmt_create, gmt_modified, 
      aftersale_id, if_deposit)
    values (#{id,jdbcType=BIGINT}, #{amount,jdbcType=BIGINT}, #{actualAmount,jdbcType=BIGINT}, 
      #{paymentPattern,jdbcType=VARCHAR}, #{payTime,jdbcType=TIMESTAMP}, #{paySn,jdbcType=VARCHAR}, 
      #{beginTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP}, #{orderId,jdbcType=BIGINT}, 
      #{state,jdbcType=TINYINT}, #{gmtCreate,jdbcType=TIMESTAMP}, #{gmtModified,jdbcType=TIMESTAMP}, 
      #{aftersaleId,jdbcType=BIGINT}, #{ifDeposit,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="com.example.payment.model.po.PaymentPo">
    insert into payment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="actualAmount != null">
        actual_amount,
      </if>
      <if test="paymentPattern != null">
        payment_pattern,
      </if>
      <if test="payTime != null">
        pay_time,
      </if>
      <if test="paySn != null">
        pay_sn,
      </if>
      <if test="beginTime != null">
        begin_time,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="orderId != null">
        order_id,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="gmtCreate != null">
        gmt_create,
      </if>
      <if test="gmtModified != null">
        gmt_modified,
      </if>
      <if test="aftersaleId != null">
        aftersale_id,
      </if>
      <if test="ifDeposit != null">
        if_deposit,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=BIGINT},
      </if>
      <if test="actualAmount != null">
        #{actualAmount,jdbcType=BIGINT},
      </if>
      <if test="paymentPattern != null">
        #{paymentPattern,jdbcType=VARCHAR},
      </if>
      <if test="payTime != null">
        #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="paySn != null">
        #{paySn,jdbcType=VARCHAR},
      </if>
      <if test="beginTime != null">
        #{beginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=BIGINT},
      </if>
      <if test="state != null">
        #{state,jdbcType=TINYINT},
      </if>
      <if test="gmtCreate != null">
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="aftersaleId != null">
        #{aftersaleId,jdbcType=BIGINT},
      </if>
      <if test="ifDeposit != null">
        #{ifDeposit,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.payment.model.po.PaymentPoExample" resultType="java.lang.Integer">
    select count(*) from payment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update payment
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.amount != null">
        amount = #{record.amount,jdbcType=BIGINT},
      </if>
      <if test="record.actualAmount != null">
        actual_amount = #{record.actualAmount,jdbcType=BIGINT},
      </if>
      <if test="record.paymentPattern != null">
        payment_pattern = #{record.paymentPattern,jdbcType=VARCHAR},
      </if>
      <if test="record.payTime != null">
        pay_time = #{record.payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.paySn != null">
        pay_sn = #{record.paySn,jdbcType=VARCHAR},
      </if>
      <if test="record.beginTime != null">
        begin_time = #{record.beginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endTime != null">
        end_time = #{record.endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.orderId != null">
        order_id = #{record.orderId,jdbcType=BIGINT},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=TINYINT},
      </if>
      <if test="record.gmtCreate != null">
        gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.gmtModified != null">
        gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="record.aftersaleId != null">
        aftersale_id = #{record.aftersaleId,jdbcType=BIGINT},
      </if>
      <if test="record.ifDeposit != null">
        if_deposit = #{record.ifDeposit,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update payment
    set id = #{record.id,jdbcType=BIGINT},
      amount = #{record.amount,jdbcType=BIGINT},
      actual_amount = #{record.actualAmount,jdbcType=BIGINT},
      payment_pattern = #{record.paymentPattern,jdbcType=VARCHAR},
      pay_time = #{record.payTime,jdbcType=TIMESTAMP},
      pay_sn = #{record.paySn,jdbcType=VARCHAR},
      begin_time = #{record.beginTime,jdbcType=TIMESTAMP},
      end_time = #{record.endTime,jdbcType=TIMESTAMP},
      order_id = #{record.orderId,jdbcType=BIGINT},
      state = #{record.state,jdbcType=TINYINT},
      gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
      aftersale_id = #{record.aftersaleId,jdbcType=BIGINT},
      if_deposit = #{record.ifDeposit,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <resultMap id="BaseResultMap" type="com.example.payment.model.po.PaymentPo">
    <id column="payment_id" jdbcType="SMALLINT" property="paymentId" />
    <result column="customer_id" jdbcType="SMALLINT" property="customerId" />
    <result column="staff_id" jdbcType="TINYINT" property="staffId" />
    <result column="rental_id" jdbcType="INTEGER" property="rentalId" />
    <result column="amount" jdbcType="DECIMAL" property="amount" />
    <result column="payment_date" jdbcType="TIMESTAMP" property="paymentDate" />
    <result column="last_update" jdbcType="TIMESTAMP" property="lastUpdate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    payment_id, customer_id, staff_id, rental_id, amount, payment_date, last_update
  </sql>
  <select id="selectByExample" parameterType="com.example.payment.model.po.PaymentPoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from payment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Short" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from payment
    where payment_id = #{paymentId,jdbcType=SMALLINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Short">
    delete from payment
    where payment_id = #{paymentId,jdbcType=SMALLINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.payment.model.po.PaymentPoExample">
    delete from payment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.payment.model.po.PaymentPo">
    insert into payment (payment_id, customer_id, staff_id, 
      rental_id, amount, payment_date, 
      last_update)
    values (#{paymentId,jdbcType=SMALLINT}, #{customerId,jdbcType=SMALLINT}, #{staffId,jdbcType=TINYINT}, 
      #{rentalId,jdbcType=INTEGER}, #{amount,jdbcType=DECIMAL}, #{paymentDate,jdbcType=TIMESTAMP}, 
      #{lastUpdate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.example.payment.model.po.PaymentPo">
    insert into payment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="paymentId != null">
        payment_id,
      </if>
      <if test="customerId != null">
        customer_id,
      </if>
      <if test="staffId != null">
        staff_id,
      </if>
      <if test="rentalId != null">
        rental_id,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="paymentDate != null">
        payment_date,
      </if>
      <if test="lastUpdate != null">
        last_update,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="paymentId != null">
        #{paymentId,jdbcType=SMALLINT},
      </if>
      <if test="customerId != null">
        #{customerId,jdbcType=SMALLINT},
      </if>
      <if test="staffId != null">
        #{staffId,jdbcType=TINYINT},
      </if>
      <if test="rentalId != null">
        #{rentalId,jdbcType=INTEGER},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="paymentDate != null">
        #{paymentDate,jdbcType=TIMESTAMP},
      </if>
      <if test="lastUpdate != null">
        #{lastUpdate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.payment.model.po.PaymentPoExample" resultType="java.lang.Integer">
    select count(*) from payment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.payment.model.po.PaymentPo">
    update payment
    <set>
      <if test="customerId != null">
        customer_id = #{customerId,jdbcType=SMALLINT},
      </if>
      <if test="staffId != null">
        staff_id = #{staffId,jdbcType=TINYINT},
      </if>
      <if test="rentalId != null">
        rental_id = #{rentalId,jdbcType=INTEGER},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="paymentDate != null">
        payment_date = #{paymentDate,jdbcType=TIMESTAMP},
      </if>
      <if test="lastUpdate != null">
        last_update = #{lastUpdate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where payment_id = #{paymentId,jdbcType=SMALLINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.payment.model.po.PaymentPo">
    update payment
    set customer_id = #{customerId,jdbcType=SMALLINT},
      staff_id = #{staffId,jdbcType=TINYINT},
      rental_id = #{rentalId,jdbcType=INTEGER},
      amount = #{amount,jdbcType=DECIMAL},
      payment_date = #{paymentDate,jdbcType=TIMESTAMP},
      last_update = #{lastUpdate,jdbcType=TIMESTAMP}
    where payment_id = #{paymentId,jdbcType=SMALLINT}
  </update>
  <resultMap id="BaseResultMap" type="com.example.payment.model.po.PaymentPo">
    <result column="id" jdbcType="BIGINT" property="id" />
    <result column="amount" jdbcType="BIGINT" property="amount" />
    <result column="actual_amount" jdbcType="BIGINT" property="actualAmount" />
    <result column="payment_pattern" jdbcType="VARCHAR" property="paymentPattern" />
    <result column="pay_time" jdbcType="TIMESTAMP" property="payTime" />
    <result column="pay_sn" jdbcType="VARCHAR" property="paySn" />
    <result column="begin_time" jdbcType="TIMESTAMP" property="beginTime" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
    <result column="order_id" jdbcType="BIGINT" property="orderId" />
    <result column="state" jdbcType="TINYINT" property="state" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
    <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified" />
    <result column="aftersale_id" jdbcType="BIGINT" property="aftersaleId" />
    <result column="if_deposit" jdbcType="TINYINT" property="ifDeposit" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, amount, actual_amount, payment_pattern, pay_time, pay_sn, begin_time, end_time, 
    order_id, state, gmt_create, gmt_modified, aftersale_id, if_deposit
  </sql>
  <select id="selectByExample" parameterType="com.example.payment.model.po.PaymentPoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from payment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.example.payment.model.po.PaymentPoExample">
    delete from payment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.payment.model.po.PaymentPo">
    insert into payment (id, amount, actual_amount, 
      payment_pattern, pay_time, pay_sn, 
      begin_time, end_time, order_id, 
      state, gmt_create, gmt_modified, 
      aftersale_id, if_deposit)
    values (#{id,jdbcType=BIGINT}, #{amount,jdbcType=BIGINT}, #{actualAmount,jdbcType=BIGINT}, 
      #{paymentPattern,jdbcType=VARCHAR}, #{payTime,jdbcType=TIMESTAMP}, #{paySn,jdbcType=VARCHAR}, 
      #{beginTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP}, #{orderId,jdbcType=BIGINT}, 
      #{state,jdbcType=TINYINT}, #{gmtCreate,jdbcType=TIMESTAMP}, #{gmtModified,jdbcType=TIMESTAMP}, 
      #{aftersaleId,jdbcType=BIGINT}, #{ifDeposit,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="com.example.payment.model.po.PaymentPo">
    insert into payment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="actualAmount != null">
        actual_amount,
      </if>
      <if test="paymentPattern != null">
        payment_pattern,
      </if>
      <if test="payTime != null">
        pay_time,
      </if>
      <if test="paySn != null">
        pay_sn,
      </if>
      <if test="beginTime != null">
        begin_time,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="orderId != null">
        order_id,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="gmtCreate != null">
        gmt_create,
      </if>
      <if test="gmtModified != null">
        gmt_modified,
      </if>
      <if test="aftersaleId != null">
        aftersale_id,
      </if>
      <if test="ifDeposit != null">
        if_deposit,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=BIGINT},
      </if>
      <if test="actualAmount != null">
        #{actualAmount,jdbcType=BIGINT},
      </if>
      <if test="paymentPattern != null">
        #{paymentPattern,jdbcType=VARCHAR},
      </if>
      <if test="payTime != null">
        #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="paySn != null">
        #{paySn,jdbcType=VARCHAR},
      </if>
      <if test="beginTime != null">
        #{beginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=BIGINT},
      </if>
      <if test="state != null">
        #{state,jdbcType=TINYINT},
      </if>
      <if test="gmtCreate != null">
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="aftersaleId != null">
        #{aftersaleId,jdbcType=BIGINT},
      </if>
      <if test="ifDeposit != null">
        #{ifDeposit,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.payment.model.po.PaymentPoExample" resultType="java.lang.Integer">
    select count(*) from payment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
</mapper>